from django.shortcuts import render
from schedule.models import Review

# Create your views here.

def index(request):

    # context = {
    #     'users': [
    #         {
    #             'name': "София",
    #             'image': '../../../static/img/sofa.jpg',
    #             'description': 'Материалы курсов легко усваиваются, преподаватели доступно все объясняют и готовы помочь в любой момент. Спасибо за качественное обучение!',
    #         },
    #         {
    #             'name': "Марсель",
    #             'image': '../../../static/img/mars.jpg',
    #             'description': 'Быстрый и удобный доступ к курсам, интересные задания и отзывчивая команда поддержки ',
    #         },
    #         {
    #             'name': "Екатерина",
    #             'image': '../../../static/img/kate.jpg',
    #             'description': 'Это идеальное место для тех, кто хочет быстро и эффективно освоить новые навыки. Большой выбор курсов, удобная платформа и высококвалифицированные преподаватели - все это делает обучение легким и увлекательным. Рекомендую!',
    #         }
    #     ],
    #     'cards': [
    #         {
    #             'name': "Полный курс по Git",
    #             'description': "Хотите научиться эффективно работать с Git? Тогда наш курс для вас! Вы изучите все необходимые навыки для работы с Git, начиная от базовых команд и заканчивая распределенным контролем версий. Наши опытные преподаватели помогут вам понять принципы Git и научат работать с ним на профессиональном уровне.",
    #             'price': '4000 - 5 занятий',
    #             'plan1': 'Знакомство с Git: установка и конфигурация',
    #             'plan2': 'Основные команды Git: add, commit, push, pull, merge, branch',
    #             'plan3': 'Распределенный контроль версий: работа с удаленными репозиториями и ветками',
    #             'plan4': 'Решение конфликтов: merge и rebase',
    #             'plan5': 'Продвинутые возможности Git: stash, cherry-pick, submodules',
    #         },
    #         {
    #             'name': "Основы Docker",
    #             'description': "Хотите узнать, как упаковать ваше приложение в контейнер и развернуть его в любой среде? Тогда наш курс по Docker - идеальный выбор для вас! Вы изучите основные концепции и возможности Docker, а также научитесь создавать и управлять контейнерами.",
    #             'price': '5500 - 6 занятий',
    #             'plan1': 'Введение в Docker: архитектура и принципы работы',
    #             'plan2': 'Создание Docker-контейнеров: Dockerfile и команды build, run, stop',
    #             'plan3': 'Работа с Docker Hub: загрузка и скачивание образов',
    #             'plan4': 'Работа с сетями и томами данных: docker network и docker volume',
    #             'plan5': 'Docker Compose: создание и управление многоконтейнерными приложениями',
    #             'plan6': 'Продвинутые возможности Docker: swarm mode, Kubernetes, Docker API',
    #         },
    #         {
    #             'name': "С# для продвинутых",
    #             'description': "Хотите стать настоящим экспертом в языке программирования C#? Тогда наш курс для продвинутых - идеальный выбор! Вы изучите продвинутые концепции языка, такие как многопоточность, асинхронность, LINQ и многие другие. Наши опытные преподаватели научат использовать C# на профессиональном уровне.",
    #             'price': '5000 - 6 занятий',
    #             'plan1': 'Основы C#: синтаксис, типы данных, управляющие конструкции, функции',
    #             'plan2': 'Объектно-ориентированное программирование в C#: классы, наследование, полиморфизм',
    #             'plan3': 'Асинхронное программирование: async/await, Task Parallel Library (TPL)',
    #             'plan4': 'Многопоточность: потоки, блокировки, взаимодействие между потоками',
    #             'plan5': 'LINQ: запросы к коллекциям, методы расширения, выражения запросов',
    #             'plan6': 'Продвинутые темы: атрибуты, делегаты, события, дженерики, рефлексия',
    #         }
    #     ]
    # }

    reviews = Review.objects.filter(rating=5)
    context = {'reviews': reviews}

    return render(request, 'schedule/index.html', context)

def calendar(request):
    return render(request, 'schedule/calendar.html')
